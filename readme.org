These are my solutions to [[https://adventofcode.com/2020][Advent of Code 2020]] in ClojureScript to be
executed via [[https://github.com/planck-repl/planck][Planck REPL]].

That's my first excursion to Planck and even to ClojureScript, so it's
kind of an experiment to see how this is going. So far I'm quite happy
though. If Clojure is about getting rid of unnecessary fluff like
Classes, then Planck is about getting rid of even more which isn't
required for the kind of short Programs AOC requires. That is: no
=project.clj=, not compile step, no elaborate namespaces, etc.

* [[https://adventofcode.com/2020/day/1][Day 1: Report Repair]]

#+begin_src sh :dir day01 :results output :exports both
planck day01.cljs <day01-input
#+end_src

#+RESULTS:
: Pair found: 1007331
: Triple found: 48914340

* [[https://adventofcode.com/2020/day/2][Day 2: Password Philosophy]]
  
#+begin_src sh :dir day02 :results output :exports both
echo Solution for example
planck day02.cljs <example
echo
echo Solution for input
planck day02.cljs <input
#+end_src

#+RESULTS:
: Solution for example
: Number of valid passwords by old policies: 2
: Number of valid passwords by new policies: 1
: 
: Solution for input
: Number of valid passwords by old policies: 550
: Number of valid passwords by new policies: 634

* [[https://adventofcode.com/2020/day/3][Day 3: Toboggan Trajectory]]

#+begin_src sh :dir day03 :results output :exports both
echo Solution for example
planck day03.cljs <example
echo
echo Solution for input
planck day03.cljs <input
#+end_src

#+RESULTS:
: Solution for example
: Number of trees encountered: 7
: Product of number of trees on all slopes: 336
: 
: Solution for input
: Number of trees encountered: 223
: Product of number of trees on all slopes: 3517401300

* [[https://adventofcode.com/2020/day/10][Day 10: Adapter Array]]

#+begin_src sh :dir day10 :results output :exports both
for input in example1 example2 input; do
    echo Solution for $input
    planck day10.cljs <$input
    echo
done
#+end_src

#+RESULTS:
#+begin_example
Solution for example1
Product of number of 1 and 3 jolt differences when using all adapters: 35
Possible adapter arrangements: 8

Solution for example2
Product of number of 1 and 3 jolt differences when using all adapters: 220
Possible adapter arrangements: 19208

Solution for input
Product of number of 1 and 3 jolt differences when using all adapters: 2244
Possible adapter arrangements: 3947645370368

#+end_example

* [[https://adventofcode.com/2020/day/12][Day 12: Rain Risk]]

#+begin_src sh :dir day12 :results output :exports both
echo Solution for example
planck day12.cljs <example
echo
echo Solution for input
planck day12.cljs <input
#+end_src

#+RESULTS:
: Solution for example
: Manhatten distance of ship by initial meaning of instructions 25
: Manhatten distance of ship by corrected meaning of instructions 286
: 
: Solution for input
: Manhatten distance of ship by initial meaning of instructions 1457
: Manhatten distance of ship by corrected meaning of instructions 106860

* [[https://adventofcode.com/2020/day/21][Day 21: Allergen Assessment]]

#+begin_src sh :dir day21 :results output :exports both
echo Solution for example
planck day21.cljs <example
echo
echo Solution for input
planck day21.cljs <input
#+end_src

#+RESULTS:
: Solution for example
: Number of occurences of non-allergic incredients: 5
: Ingredients alphabetically by their allergen: mxmxvkd,sqjhc,fvjkl
: 
: Solution for input
: Number of occurences of non-allergic incredients: 2436
: Ingredients alphabetically by their allergen: dhfng,pgblcd,xhkdc,ghlzj,dstct,nqbnmzx,ntggc,znrzgs
